{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"\",\n  authDomain: \"\",\n  databaseURL: \"\",\n  projectId: \"\",\n  storageBucket: \"\",\n  messagingSenderId: \"\",\n  appId: \"\",\n  measurementId: \"\"\n};\nfirebase.initializeApp(config);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`Users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport default firebase;","map":{"version":3,"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","reduce","accumulator","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"sources":["C:/Users/om sai/Downloads/County-Clothing-master/client/src/firebase/firebase.utils.js"],"sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"\",\n    authDomain: \"\",\n    databaseURL: \"\",\n    projectId: \"\",\n    storageBucket: \"\",\n    messagingSenderId: \"\",\n    appId: \"\",\n    measurementId: \"\"\n};\n\nfirebase.initializeApp(config);\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n    if (!userAuth) return;\n\n    const userRef = firestore.doc(`Users/${userAuth.uid}`);\n\n    const snapShot = await userRef.get();\n\n    if (!snapShot.exists) {\n        const { displayName, email } = userAuth;\n        const createdAt = new Date();\n\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                createdAt,\n                ...additionalData\n            })\n        } catch (error) {\n            console.log('error creating user', error.message);\n        }\n    }\n\n    return userRef;\n};\n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n    const collectionRef = firestore.collection(collectionKey);\n\n    const batch = firestore.batch();\n    objectsToAdd.forEach(obj => {\n        const newDocRef = collectionRef.doc();\n        batch.set(newDocRef, obj);\n    });\n\n    return await batch.commit();\n};\n\nexport const convertCollectionsSnapshotToMap = collections => {\n    const transformedCollection = collections.docs.map(doc => {\n        const { title, items } = doc.data();\n\n        return {\n            routeName: encodeURI(title.toLowerCase()),\n            id: doc.id,\n            title,\n            items\n        };\n    });\n\n    return transformedCollection.reduce((accumulator, collection) => {\n        accumulator[collection.title.toLowerCase()] = collection;\n        return accumulator;\n    }, {});\n};\n\nexport const getCurrentUser = () => {\n    return new Promise((resolve, reject) => {\n        const unsubscribe = auth.onAuthStateChanged(userAuth => {\n            unsubscribe();\n            resolve(userAuth);\n        }, reject)\n    });\n}\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\n\nexport default firebase;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,cAAc;AACnC,OAAO,oBAAoB;AAC3B,OAAO,eAAe;AAEtB,MAAMC,MAAM,GAAG;EACXC,MAAM,EAAE,EAAE;EACVC,UAAU,EAAE,EAAE;EACdC,WAAW,EAAE,EAAE;EACfC,SAAS,EAAE,EAAE;EACbC,aAAa,EAAE,EAAE;EACjBC,iBAAiB,EAAE,EAAE;EACrBC,KAAK,EAAE,EAAE;EACTC,aAAa,EAAE;AACnB,CAAC;AAEDT,QAAQ,CAACU,aAAa,CAACT,MAAM,CAAC;AAE9B,OAAO,MAAMU,yBAAyB,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,cAAc,KAAK;EACzE,IAAI,CAACD,QAAQ,EAAE;EAEf,MAAME,OAAO,GAAGC,SAAS,CAACC,GAAG,CAAC,SAASJ,QAAQ,CAACK,GAAG,EAAE,CAAC;EAEtD,MAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAG,CAAC,CAAC;EAEpC,IAAI,CAACD,QAAQ,CAACE,MAAM,EAAE;IAClB,MAAM;MAAEC,WAAW;MAAEC;IAAM,CAAC,GAAGV,QAAQ;IACvC,MAAMW,SAAS,GAAG,IAAIC,IAAI,CAAC,CAAC;IAE5B,IAAI;MACA,MAAMV,OAAO,CAACW,GAAG,CAAC;QACdJ,WAAW;QACXC,KAAK;QACLC,SAAS;QACT,GAAGV;MACP,CAAC,CAAC;IACN,CAAC,CAAC,OAAOa,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,KAAK,CAACG,OAAO,CAAC;IACrD;EACJ;EAEA,OAAOf,OAAO;AAClB,CAAC;AAED,OAAO,MAAMgB,yBAAyB,GAAG,MAAAA,CAAOC,aAAa,EAAEC,YAAY,KAAK;EAC5E,MAAMC,aAAa,GAAGlB,SAAS,CAACmB,UAAU,CAACH,aAAa,CAAC;EAEzD,MAAMI,KAAK,GAAGpB,SAAS,CAACoB,KAAK,CAAC,CAAC;EAC/BH,YAAY,CAACI,OAAO,CAACC,GAAG,IAAI;IACxB,MAAMC,SAAS,GAAGL,aAAa,CAACjB,GAAG,CAAC,CAAC;IACrCmB,KAAK,CAACV,GAAG,CAACa,SAAS,EAAED,GAAG,CAAC;EAC7B,CAAC,CAAC;EAEF,OAAO,MAAMF,KAAK,CAACI,MAAM,CAAC,CAAC;AAC/B,CAAC;AAED,OAAO,MAAMC,+BAA+B,GAAGC,WAAW,IAAI;EAC1D,MAAMC,qBAAqB,GAAGD,WAAW,CAACE,IAAI,CAACC,GAAG,CAAC5B,GAAG,IAAI;IACtD,MAAM;MAAE6B,KAAK;MAAEC;IAAM,CAAC,GAAG9B,GAAG,CAAC+B,IAAI,CAAC,CAAC;IAEnC,OAAO;MACHC,SAAS,EAAEC,SAAS,CAACJ,KAAK,CAACK,WAAW,CAAC,CAAC,CAAC;MACzCC,EAAE,EAAEnC,GAAG,CAACmC,EAAE;MACVN,KAAK;MACLC;IACJ,CAAC;EACL,CAAC,CAAC;EAEF,OAAOJ,qBAAqB,CAACU,MAAM,CAAC,CAACC,WAAW,EAAEnB,UAAU,KAAK;IAC7DmB,WAAW,CAACnB,UAAU,CAACW,KAAK,CAACK,WAAW,CAAC,CAAC,CAAC,GAAGhB,UAAU;IACxD,OAAOmB,WAAW;EACtB,CAAC,EAAE,CAAC,CAAC,CAAC;AACV,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAChC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACpC,MAAMC,WAAW,GAAGC,IAAI,CAACC,kBAAkB,CAAChD,QAAQ,IAAI;MACpD8C,WAAW,CAAC,CAAC;MACbF,OAAO,CAAC5C,QAAQ,CAAC;IACrB,CAAC,EAAE6C,MAAM,CAAC;EACd,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAME,IAAI,GAAG3D,QAAQ,CAAC2D,IAAI,CAAC,CAAC;AACnC,OAAO,MAAM5C,SAAS,GAAGf,QAAQ,CAACe,SAAS,CAAC,CAAC;AAE7C,OAAO,MAAM8C,cAAc,GAAG,IAAI7D,QAAQ,CAAC2D,IAAI,CAACG,kBAAkB,CAAC,CAAC;AACpED,cAAc,CAACE,mBAAmB,CAAC;EAAEC,MAAM,EAAE;AAAiB,CAAC,CAAC;AAChE,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAMN,IAAI,CAACO,eAAe,CAACL,cAAc,CAAC;AAE1E,eAAe7D,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}